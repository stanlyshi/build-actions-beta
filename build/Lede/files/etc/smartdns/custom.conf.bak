# Add custom settings here.

# set log level
# log-level [level], level=fatal, error, warn, notice, info, debug
# log-level error

# log-size k,m,g
# log-size 128k

# log-file /var/log/smartdns.log
# log-num 2

# List of hosts that supply bogus NX domain results 
# bogus-nxdomain [ip/subnet]

# 自定义.net和.cn的域名走cn组
# nameserver /.net/cn
# nameserver /.cn/cn

# 持久化缓存
# [yes|no]，默认自动，当 cache-file 所在的位置有超过 128MB 的可用空间时启用，否则禁用。
# cache-persist yes

# 缓存持久化文件路径
# 默认路径/tmp/smartdns.cache
# cache-file /tmp/smartdns.cache

# 域名预先获取功能
# [yes|no]，默认no。
# prefetch-domain yes

# 域名结果缓存个数
# 默认512
# cache-size 512

# 禁止IPV6 AAAA记录解析，A记录指向IPv4地址，AAAA记录指向IPv6地址。
# 强制AAAA地址返回SOA
# 默认no
# force-AAAA-SOA yes

# 过期缓存服务功能
# [yes|no]，默认no，开启此功能后，如果有请求时尝试回应TTL为0的过期记录，并并发查询记录，以避免查询等待
# serve-expired yes

# 过期缓存服务最长超时时间
# 秒，默认0。0：表示停用超时，> 0表示指定的超时的秒数
# serve-expired-ttl 0

# 回应的过期缓存TTL（指定的超时的秒数）
# 秒，默认5。0：表示停用超时，> 0表示指定的超时的秒数
# serve-expired-reply-ttl 15

# 域名结果TTL
# 默认远程查询结果
# rr-ttl 1800

# 允许的最小TTL值
# 默认远程查询结果
# rr-ttl-min 600

# 允许的最大TTL值
# 默认远程查询结果
# rr-ttl-max 3600

# 如何提高cache效率，加快访问速度？
# a. 适当增大cache的记录数，通过cache-size来设置缓存记录数。查询压力大的环境下，并且有内存大的机器的情况下，可适当调大。
# b. 适当设置最小TTL值，通过rr-ttl-min将最低DNS TTL时间设置为一个合理值，延长缓存时间。建议是超时时间设置在10～30分钟，避免服务器域名变化时，查询到失效域名。
# c. 开启域名预获取功能，通过prefetch-domain yes来启用域名预先获取功能，提高查询命中率。配合上述ttl超时时间，smartdns将在域名ttl即将超时使，再次发送查询请求，并缓存查询结果供后续使用。频繁访问的域名将会持续缓存。此功能将在空闲时消耗更多的CPU。
# d. 过期缓存服务功能，通过serve-expired yes来启用过期缓存服务功能，可提高缓存命中率的同时，降低CPU占用。此功能会在TTL超时后，将返回TTL=0给客户端，并且同时再次发送查询请求，并缓存新的结果给后续使用。


